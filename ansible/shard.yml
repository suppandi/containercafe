---
- include: ./load-vars-cluster.yml

- hosts: localhost
  tasks:
  - debug: var=ansible_version

- hosts:
    - cluster-{{cluster_name}}
  tasks:
  - name: test whether systemd is available
    shell: if systemctl list-units 'init*'; then echo 'systemd here'; fi
    changed_when: False
    register: rslt

  - set_fact: is_systemd={{ 'systemd here' in rslt.stdout }}
  - set_fact: is_upstart={{ not is_systemd|bool }}

- hosts:
    - cluster-{{cluster_name}}
    - localhost

  pre_tasks:
  - debug: msg="network plugin is {{network_kind}}"

  - name: check for disallowed combination
    fail:
      msg: Mesos is currently required when deploying Swarm
    when: "{{swarm_deploy|bool and not mesos_deploy|bool}}"

  - name: derive kubernetes_on_mesos_deploy
    set_fact:
      kubernetes_on_mesos_deploy: "{{ kubernetes_deploy|bool and mesos_deploy|bool }}"

  - name: Set secondary variables of networking to their initial values
    set_fact:
      k8s_worker_kubelet_network_args: []
      use_kube_system_kubedns: False

  roles:
  - "{{ network_kind }}-variables"

  post_tasks:
  - name: Set etcd_deploy to True if other settings imply deploying etcd
    set_fact:
      etcd_deploy: True
    when: kubernetes_deploy|bool

- hosts: localhost
  tasks:
  - fail:
      msg: ha_deploy must be True when there are multiple hosts in the mesos_master-{{ cluster_name }} group in your Ansible inventory
    when: mesos_deploy and groups['mesos_master-' ~ cluster_name]|length > 1 and not ha_deploy|bool

- hosts: localhost
  roles:
  - { role: k8s-system-kubedns-local-prep, when: use_kube_system_kubedns|bool }
  - "{{ network_kind }}-local-prep"

- hosts: cluster-{{cluster_name}}
  become: yes
  roles:
  - prereqs
  - common

- hosts: localhost
  roles:
  - keygen-shard

- hosts: zk-{{cluster_name}}
  become: yes
  roles:
  - { role: zk, when: "mesos_deploy|bool" }

- hosts: etcd-{{cluster_name}}
  become: yes
  roles:
  - { role: etcd, when: "etcd_deploy|bool" }

- hosts: cluster-{{cluster_name}}
  become: yes
  roles:
  - role: "{{ network_kind }}-remote-prep"

- hosts: mesos_master-{{cluster_name}}
  become: yes
  roles:
  - { role: mesos-master, when: "mesos_deploy|bool" }

- hosts: lb-{{cluster_name}}
  become: yes
  roles:
  - lb
  - { role: vip, when: "mesos_deploy and (groups['mesos_master-' ~ cluster_name]|length > 1 or ha_deploy|bool)" }

- hosts: k8s_auth-{{cluster_name}}
  become: yes
  roles:
  - auth

- hosts: k8s_master-{{cluster_name}}
  become: yes
  roles:
  - { role: k8sm-master, when: "kubernetes_deploy|bool" }

- hosts: swarm_master-{{cluster_name}}
  become: yes
  roles:
  - { role: swarm-master, when: "swarm_deploy|bool" }

- hosts: workers-{{cluster_name}}
  become: yes
  roles:
  - { role: mesos-worker, when: "mesos_deploy|bool" }
  - { role: k8sm-worker, when: "kubernetes_deploy|bool" }
  - { role: swarm-worker, when: "swarm_deploy|bool" }

- hosts: k8s_master-{{cluster_name}}
  become: yes
  roles:
  - role: k8s-system-kubedns
    when: >
      use_kube_system_kubedns|bool and
      inventory_hostname == groups['k8s_master-' ~ cluster_name][0]
